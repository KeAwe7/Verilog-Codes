Main:
module hexTo7Seg(
    input  [3:0]x,
    output reg [6:0]z
    );

    always @*
        case (x)
            4'b0000 :        //Hexadecimal 0
            z = 7'b1000000;
            4'b0001 :        //Hexadecimal 1
            z = 7'b1111001  ;
            4'b0010 :        // Hexadecimal 2
            z = 7'b0100100;
            4'b0011 :        // Hexadecimal 3
            z = 7'b0110000 ;
            4'b0100 :        // Hexadecimal 4
            z = 7'b0011001 ;
            4'b0101 :        // Hexadecimal 5
            z = 7'b0010010 ;  
            4'b0110 :        // Hexadecimal 6
            z = 7'b0000010 ;
            4'b0111 :        // Hexadecimal 7
            z = 7'b1111000;
            4'b1000 :        //Hexadecimal 8
            z = 7'b0000000;
            4'b1001 :        //Hexadecimal 9
            z = 7'b0010000 ;
            4'b1010 :        // Hexadecimal A
            z = 7'b0001000 ;
            4'b1011 :        // Hexadecimal B
            z = 7'b0000011;
            4'b1100 :        // Hexadecimal C
            z = 7'b1000110 ;
            4'b1101 :        // Hexadecimal D
            z = 7'b0100001 ;
            4'b1110 :        // Hexadecimal E
            z = 7'b0000110 ;
            4'b1111 :        // Hexadecimal F
            z = 7'b0001110 ;
        endcase
 
endmodule

Testbench:
`timescale 1ns / 1ps

module stimulus;

    // Inputs
    reg [3:0] x;
    // Outputs
    wire [6:0] z;

    // Instantiate the hex-to-7-segment verilog module
    hexTo7Seg instance_1 (
        .x(x),
        .z(z)
    );
 
    initial
    begin
        // Initialize Inputs
        x = 0;

         //Switch values at input for intervals of 20 timescale
        #20 x = 1;
        #20 x = 2;
        #20 x = 3;    
        #20 x = 4;    
        #20 x = 5;
        #20 x = 6;
        #20 x = 7;    
        #20 x = 8;    
        #20 x = 9;
        #20 x = 10;
        #20 x = 11;    
        #20 x = 12;    
        #20 x = 13;
        #20 x = 14;
        #20 x = 15;    
        #40;
    end  
     
     //print the outputs for transcript window
    initial
    begin
        $monitor("x=%h,z=%7b",x,z);
    end
 
endmodule

QSF:
# -------------------------------------------------------------------------- #
#
# Copyright (C) 2018  Intel Corporation. All rights reserved.
# Your use of Intel Corporation's design tools, logic functions 
# and other software and tools, and its AMPP partner logic 
# functions, and any output files from any of the foregoing 
# (including device programming or simulation files), and any 
# associated documentation or information are expressly subject 
# to the terms and conditions of the Intel Program License 
# Subscription Agreement, the Intel Quartus Prime License Agreement,
# the Intel FPGA IP License Agreement, or other applicable license
# agreement, including, without limitation, that your use is for
# the sole purpose of programming logic devices manufactured by
# Intel and sold by Intel or its authorized distributors.  Please
# refer to the applicable agreement for further details.
#
# -------------------------------------------------------------------------- #
#
# Quartus Prime
# Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition
# Date created = 12:39:54  September 08, 2023
#
# -------------------------------------------------------------------------- #
#
# Notes:
#
# 1) The default values for assignments are stored in the file:
#		hexTo7Seg_assignment_defaults.qdf
#    If this file doesn't exist, see file:
#		assignment_defaults.qdf
#
# 2) Altera recommends that you do not modify this file. This
#    file is updated automatically by the Quartus Prime software
#    and any changes you make may be lost or overwritten.
#
# -------------------------------------------------------------------------- #


set_global_assignment -name FAMILY "Cyclone V"
set_global_assignment -name DEVICE 5CSEMA5F31C6
set_global_assignment -name TOP_LEVEL_ENTITY hexTo7Seg
set_global_assignment -name ORIGINAL_QUARTUS_VERSION 18.1.0
set_global_assignment -name PROJECT_CREATION_TIME_DATE "12:39:54  SEPTEMBER 08, 2023"
set_global_assignment -name LAST_QUARTUS_VERSION "18.1.0 Lite Edition"
set_global_assignment -name PROJECT_OUTPUT_DIRECTORY output_files
set_global_assignment -name MIN_CORE_JUNCTION_TEMP 0
set_global_assignment -name MAX_CORE_JUNCTION_TEMP 85
set_global_assignment -name ERROR_CHECK_FREQUENCY_DIVISOR 256
set_global_assignment -name EDA_SIMULATION_TOOL "ModelSim-Altera (Verilog)"
set_global_assignment -name EDA_TIME_SCALE "1 ps" -section_id eda_simulation
set_global_assignment -name EDA_OUTPUT_DATA_FORMAT "VERILOG HDL" -section_id eda_simulation
set_global_assignment -name VERILOG_FILE hexTo7Seg.v
set_global_assignment -name VERILOG_FILE tb_hexTo7Seg.v
set_global_assignment -name POWER_PRESET_COOLING_SOLUTION "23 MM HEAT SINK WITH 200 LFPM AIRFLOW"
set_global_assignment -name POWER_BOARD_THERMAL_MODEL "NONE (CONSERVATIVE)"
set_global_assignment -name EDA_GENERATE_FUNCTIONAL_NETLIST ON -section_id eda_simulation
set_global_assignment -name PARTITION_NETLIST_TYPE SOURCE -section_id Top
set_global_assignment -name PARTITION_FITTER_PRESERVATION_LEVEL PLACEMENT_AND_ROUTING -section_id Top
set_global_assignment -name PARTITION_COLOR 16764057 -section_id Top
set_location_assignment PIN_AF10 -to x[3]
set_location_assignment PIN_AF9 -to x[2]
set_location_assignment PIN_AC12 -to x[1]
set_location_assignment PIN_AB12 -to x[0]
set_location_assignment PIN_AH28 -to z[6]
set_location_assignment PIN_AG28 -to z[5]
set_location_assignment PIN_AF28 -to z[4]
set_location_assignment PIN_AG27 -to z[3]
set_location_assignment PIN_AE28 -to z[2]
set_location_assignment PIN_AE27 -to z[1]
set_location_assignment PIN_AE26 -to z[0]
set_global_assignment -name SDC_FILE hexTo7Seg.sdc
set_instance_assignment -name PARTITION_HIERARCHY root_partition -to | -section_id Top
